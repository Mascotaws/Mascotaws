AWSTemplateFormatVersion : '2010-09-09'
Transform:
  - AWS::Serverless-2016-10-31

Parameters:
  Project: 
    Type: String

Description: lambda and bucket
Resources:
  MyBucketRole:
    Type: AWS::S3::BucketPolicy
    DeletionPolicy: Retain
    Properties:
      Bucket: convert-image44934777
      PolicyDocument:
        Statement:
        - Action: s3.GetObject
          Effect: Allow
          
  MyBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      AccessControl: PublicRead
      BucketName: convert-image44934777
      ReplicationConfiguration:
        Role: MyBucketRole

  
  
  
  MyLambdaRole1:
    Type: AWS::IAM::Role
    DeletionPolicy: Retain
    Properties:
      RoleName: my-lambda-role-s32
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
      - PolicyName: my-lambda-policy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action: s3:*
            Resource: arn:aws:s3:::convert-image

  ConvertImageLambda:
    Type: AWS::Serverless::Function
    DeletionPolicy: Retain
    Properties:
      FunctionName: convert-image-lambda
      Runtime: python3.6
      CodeUri: ./src
      Handler: lambda1.handler
      Timeout: 300
      MemorySize: 500
      Role: !GetAtt MyLambdaRole1.Arn
      Events:
        S3Event:
          Type: S3 
          Properties:
            Bucket: !Ref MyBucket
            Events: s3:ObjectCreated:*
            Filter: 
              S3Key:
                Rules:
                - Name: prefix
                 